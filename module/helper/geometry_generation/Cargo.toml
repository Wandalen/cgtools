[package]
name = "geometry_generation"
version = "0.1.0"
edition = "2021"
rust-version = "1.75.0"
authors = [
  "Kostiantyn Mysnyk <wandalen@obox.systems>",
  "Bilan Vadym <vadym.b@obox.systems>"
]
license = "MIT"
repository = "https://github.com/Wandalen/cgtools"
homepage = "https://github.com/Wandalen/cgtools/tree/master/module/helper/geometry_generation"
documentation = "https://docs.rs/geometry_generation"
description = "3D geometry generation toolkit with primitives, text rendering, and procedural shape creation"
readme = "readme.md"
keywords = ["geometry", "3d", "primitives", "mesh", "graphics"]
categories = ["graphics", "game-development", "mathematics", "rendering"]
include = [
    "src/**/*",
    "tests/**/*",
    "Cargo.toml",
    "readme.md",
    "license*",
    "changelog*",
]

[lints]
workspace = true

[features]
default = ["enabled"]

# Core geometry generation functionality
enabled = [
    "dep:mod_interface",
    "dep:minwebgl", 
    "dep:mingl",
    "dep:renderer",
    "dep:web-sys",
]

# Full feature set with all geometry types
full = ["enabled", "csg", "text", "font-processing"]

# Constructive Solid Geometry operations
csg = ["enabled", "dep:csgrs", "dep:parry3d"]

# Text rendering and font processing
text = ["enabled", "dep:kurbo", "dep:norad", "dep:quick-xml", "dep:interpoli"]

# Font processing features
font-processing = ["text", "dep:earcutr"]

# glTF model loading
gltf-import = ["enabled", "dep:gltf"]

# Random geometry generation
random = ["enabled", "dep:rand", "dep:getrandom"]

[dependencies]
mod_interface = { workspace = true, optional = true }
minwebgl = { workspace = true, features = [ "future", "math", "diagnostics" ], optional = true }
mingl = { workspace = true, features = [ "camera_orbit_controls" ], optional = true }
renderer = { workspace = true, optional = true }
gltf = { workspace = true, features = [ "import", "KHR_materials_specular" ], optional = true }
csgrs = { workspace = true, optional = true }
parry3d = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
getrandom = { workspace = true, features = [ "wasm_js" ], optional = true }
kurbo = { workspace = true, optional = true }
norad = { workspace = true, features = [ "kurbo" ], optional = true }
quick-xml = { workspace = true, optional = true }
earcutr = { workspace = true, optional = true }
interpoli = { workspace = true, optional = true }

[dependencies.web-sys]
workspace = true
optional = true
features = [
  'MouseEvent',
  'PointerEvent',
  'WheelEvent',
  'WebGlTexture',
  'HtmlImageElement',
  'Blob',
  'BlobPropertyBag',
  'Url',
  'WebGlFramebuffer',
  'WebGlRenderbuffer'
]

[dev-dependencies]
test_tools = { workspace = true }

# Metadata for crates.io
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
default-target = "wasm32-unknown-unknown"
targets = [
    "wasm32-unknown-unknown",
    "x86_64-unknown-linux-gnu",
    "x86_64-pc-windows-msvc",
    "x86_64-apple-darwin",
]

# Cargo.toml maintenance metadata
[package.metadata.release]
pre-release-replacements = [
    { file = "readme.md", search = "geometry_generation = \"[0-9.]+\"", replace = "geometry_generation = \"{{version}}\"" },
    { file = "changelog.md", search = "## Unreleased", replace = "## Unreleased\n\n## {{version}} - {{date}}" },
]
